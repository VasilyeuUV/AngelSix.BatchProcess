<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Design.PreviewWith>
    <Border Padding="20"
            Width="400"
            Background="{DynamicResource PrimaryBackgroundGradient}">
      <!-- Add Controls for Previewer Here -->
      <Grid ColumnDefinitions="*, *">
        <StackPanel Spacing="15">
          <Button Content="Normal"/>
          <Button Classes="small" Content="Small"/>
          <Button Classes="smaller" Content="Smaller"/>
          <Button Classes="subtle" Content="Subtle"/>
          <Button Classes="outline" Content="Outline"/>
          <Button Classes="alert" Content="Alert"/>
          <Button Classes="danger" Content="Danger"/>
          <Button Classes="transparent">
            <Label Classes="icon-only"
                   Content="&#xE272;"/>
          </Button>
          <IconButton Classes="subtle"
                      IconText="&#xE2C4;"
                      Content="Icon Subtle"
                      HorizontalAlignment="Left"/>
          <IconButton Classes="outline"
                      IconText="&#xE2C4;"
                      Content="Icon Outline"
                      HorizontalAlignment="Left"/>
          <CheckBox/>
          <CheckBox Content="Content"/>
          <CheckBox IsChecked="true"/>
          <CheckBox IsChecked="true"
                    Content="Content"/>
        </StackPanel>
        <StackPanel Grid.Column="1"
                    Spacing="15">
          <IconButton Classes="subtle"
                      IconText="&#xE2C4;"
                      Content="Home"
                      IsEnabled="False"
                      HorizontalAlignment="Stretch"/>
          <Button Content="Normal"
                  IsEnabled="False"/>
          <Button Classes="subtle"
                  Content="Subtle"
                  IsEnabled="False"/>
          <Button Classes="outline"
                  Content="Outline"
                  IsEnabled="False"/>
          <Button Classes="alert"
                  Content="Alert"
                  IsEnabled="False"/>
          <Button Classes="small"
                  Content="Small"
                  IsEnabled="False"/>
          <CheckBox IsEnabled="False"/>
          <CheckBox Content="Content"
                    IsEnabled="False"/>
          <CheckBox IsChecked="true"
                    IsEnabled="False"/>
          <CheckBox IsChecked="true"
                    Content="Content"
                    IsEnabled="False"/>
        </StackPanel>
      </Grid>
    </Border>
  </Design.PreviewWith>

  <!-- Add Styles Here -->

  <!--###############################################################################-->
  <!-- Region BUTTON STYLES -->

  <Style Selector=":is(Button)">
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="FontWeight" Value="Bold"/>
    <Setter Property="CornerRadius" Value="10"/>
    <Setter Property="Padding" Value="9 5.5 9.2 5.5"/>
    <Setter Property="BorderThickness" Value="{DynamicResource PrimaryBorderThickness}"/>
  </Style>

  <Style Selector=":is(Button) Label">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
  </Style>


  <!-- Button effects -->

  <Style Selector=":is(Button) /template/ ContentPresenter">
    <Setter Property="Transitions">
      <Transitions>
        <BrushTransition Property="Foreground" Duration="0:0:0.1"/>
        <BrushTransition Property="Background" Duration="0:0:0.1"/>
        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1"/>
      </Transitions>
    </Setter>
  </Style>

  <!-- Active button -->
  <Style Selector=":is(Button).active">
    <Setter Property="Background" Value="{DynamicResource HoverGradient}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>

    <Style Selector="^ /template/ ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource HoverGradient}"/>
      <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
    </Style>
  </Style>

  <!-- End Region BUTTON STYLES -->

  <!-- Small button -->

  <Style Selector=":is(Button).small">
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="CornerRadius" Value="6"/>
    <Setter Property="Padding" Value="6 2"/>
  </Style>

  <!-- Smaller button -->

  <Style Selector=":is(Button).smaller">
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="CornerRadius" Value="5"/>
    <Setter Property="Padding" Value="3 0"/>
  </Style>

  <!-- Normal button -->
  <Style Selector=":is(Button):not(CheckBox)">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundSubtle}"/>
    <Setter Property="Background" Value="{DynamicResource ActiveGradient}"/>

    <Style Selector="^:pointerover">
      <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
      <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}"/>

      <Style Selector="^:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}"/>
      </Style>

    </Style>
  </Style>

  <!-- Alert button -->

  <Style Selector=":is(Button).alert">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
    <Setter Property="Background" Value="{DynamicResource AlertGradient}"/>

    <Style Selector="^:pointerover /template/ ContentPresenter">
      <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
      <Setter Property="Background" Value="{DynamicResource AlertHoverGradient}"/>

      <Style Selector="^ /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
        <Setter Property="Background" Value="{DynamicResource AlertHoverGradient}"/>
      </Style>

    </Style>
  </Style>

  <!-- Danger button -->

  <Style Selector=":is(Button).danger">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
    <Setter Property="Background" Value="{DynamicResource DangerGradient}"/>

    <Style Selector="^:pointerover /template/ ContentPresenter">
      <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
      <Setter Property="Background" Value="{DynamicResource DangerHoverGradient}"/>

      <Style Selector="^ /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
        <Setter Property="Background" Value="{DynamicResource DangerHoverGradient}"/>
      </Style>

    </Style>
  </Style>

  <!-- Subtle button -->

  <Style Selector=":is(Button).subtle">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"/>

    <Style Selector="^:pointerover /template/ ContentPresenter">
      <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverForeground}"/>
      <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}"/>
    </Style>

  </Style>


  <!-- Outline button -->

  <Style Selector=":is(Button).outline">
    <Setter Property="Foreground" Value="{DynamicResource ActiveGradientText}"/>
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ActiveGradient}"/>

    <Style Selector="^:pointerover">
      <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
      <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ActiveHoverGradient}"/>

      <Style Selector="^ /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveHoverGradient}"/>
      </Style>

    </Style>
  </Style>


  <!-- Transparent button -->
  <Style Selector=":is(Button).transparent">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>

    <Style Selector="^ Label.icon-only">
      <Setter Property="FontFamily" Value="{DynamicResource Phosphor}"/>
    </Style>

    <Style Selector="^:pointerover">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="RenderTransform" Value="scale(1.2)"/>

      <Style Selector="^ /template/ ContentPresenter">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
        <Setter Property="RenderTransform" Value="scale(1.2)"/>
      </Style>

    </Style>
  </Style>

</Styles>
