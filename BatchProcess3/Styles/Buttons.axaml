<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Design.PreviewWith>
    <Border Padding="20"
            Width="400"
            Background="{DynamicResource PrimaryBackgroundGradient}">
      <!-- Add Controls for Previewer Here -->
      <Grid ColumnDefinitions="*, *">
        <StackPanel Spacing="15">
          <Button Content="Normal"/>
          <Button Classes="small" Content="Small"/>
          <Button Classes="smaller" Content="Smaller"/>
          <Button Classes="subtle" Content="Subtle"/>
          <Button Classes="outline" Content="Outline"/>
          <Button Classes="alert" Content="Alert"/>
          <Button Classes="alert outline" Content="Alert Outline"/>
          <Button Classes="danger" Content="Danger"/>
          <Button Classes="danger outline" Content="Danger Outline"/>
          <Button Classes="success" Content="Success"/>
          <Button Classes="success outline" Content="Success Outline"/>

          <IconButton Classes="subtle"
                      IconText="&#xE2C4;"
                      Content="Icon Subtle"
                      HorizontalAlignment="Left"/>
          <IconButton Classes="outline"
                      IconText="&#xE2C4;"
                      Content="Icon Outline"
                      HorizontalAlignment="Left"/>
          <IconButton Classes="outline"
                      IconText="&#xE2C4;"
                      Content="Icon Stretch"
                      HorizontalAlignment="Stretch"/>

          <Button>
            <Label Classes="icon-only"
                   Content="&#xE272;"/>
          </Button>
          <Button Classes="transparent">
            <Label Classes="icon-only"
                   Content="&#xE272;"/>
          </Button>
        </StackPanel>
        <StackPanel Grid.Column="1"
                    Spacing="15">
          <IconButton Classes="subtle"
                      IconText="&#xE2C4;"
                      Content="Home"
                      IsEnabled="False"
                      HorizontalAlignment="Stretch"/>
          <Button Content="Normal"
                  IsEnabled="False"/>
          <Button Classes="subtle"
                  Content="Subtle"
                  IsEnabled="False"/>
          <Button Classes="outline"
                  Content="Outline"
                  IsEnabled="False"/>
          <Button Classes="alert"
                  Content="Alert"
                  IsEnabled="False"/>
          <Button Classes="small"
                  Content="Small"
                  IsEnabled="False"/>
        </StackPanel>
      </Grid>
    </Border>
  </Design.PreviewWith>

  <!-- Add Styles Here -->

  <!-- Button Styles -->
  <Style Selector=":is(Button)">
    <Setter Property="FontSize" Value="17"></Setter>
    <Setter Property="CornerRadius" Value="10"></Setter>
    <Setter Property="FontWeight" Value="Bold"></Setter>
    <Setter Property="Padding" Value="9 5.5 9.2 5.5"></Setter>
    <Setter Property="BorderThickness" Value="{DynamicResource PrimaryBorderThickness}"></Setter>
    <Setter Property="Effect">
      <DropShadowEffect BlurRadius="30" Opacity="0.3"></DropShadowEffect>
    </Setter>
  </Style>

  <!-- Small button -->
  <Style Selector=":is(Button).small">
    <Setter Property="FontSize" Value="14"></Setter>
    <Setter Property="CornerRadius" Value="6"></Setter>
    <Setter Property="Padding" Value="6 2 6 2"></Setter>
  </Style>

  <!-- Smaller button -->
  <Style Selector=":is(Button).smaller">
    <Setter Property="FontSize" Value="12"></Setter>
    <Setter Property="CornerRadius" Value="5"></Setter>
    <Setter Property="Padding" Value="3 0 3 0"></Setter>
  </Style>

  <!-- Normal button -->
  <Style Selector=":is(Button):not(CheckBox)">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundSubtle}"></Setter>
    <Setter Property="Background" Value="{DynamicResource ActiveGradient}"></Setter>
  </Style>

  <!-- Normal button (hover) -->
  <Style Selector=":is(Button):not(CheckBox):pointerover /template/ ContentPresenter">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}"></Setter>
  </Style>
  <Style Selector=":is(Button):not(CheckBox):pointerover">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}"></Setter>
  </Style>

  <!-- Alert button -->
  <Style Selector=":is(Button).alert">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource AlertGradient}"></Setter>
  </Style>

  <!-- Alert button (hover) -->
  <Style Selector=":is(Button).alert:pointerover /template/ ContentPresenter">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource AlertHoverGradient}"></Setter>
  </Style>
  <Style Selector=":is(Button).alert:pointerover">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource AlertGradient}"></Setter>
  </Style>

  <!-- Danger button -->
  <Style Selector=":is(Button).danger">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource DangerGradient}"></Setter>
  </Style>

  <!-- Danger button (hover) -->
  <Style Selector=":is(Button).danger:pointerover /template/ ContentPresenter">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource DangerHoverGradient}"></Setter>
  </Style>
  <Style Selector=":is(Button).danger:pointerover">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource DangerGradient}"></Setter>
  </Style>

  <!-- Success button -->
  <Style Selector=":is(Button).success">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource SuccessGradient}"></Setter>
  </Style>

  <!-- Success button (hover) -->
  <Style Selector=":is(Button).success:pointerover /template/ ContentPresenter">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource SuccessHoverGradient}"></Setter>
  </Style>
  <Style Selector=":is(Button).alert:pointerover">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource SuccessHoverGradient}"></Setter>
  </Style>

  <!-- Subtle button -->
  <Style Selector=":is(Button).subtle">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
  </Style>

  <!-- Subtle button (hover) -->
  <Style Selector=":is(Button).subtle:pointerover /template/ ContentPresenter">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverForeground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}"></Setter>
  </Style>
  <Style Selector=":is(Button).subtle:pointerover">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverForeground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}"></Setter>
  </Style>

  <!-- Outline button -->
  <Style Selector=":is(Button).outline">
    <Setter Property="Foreground" Value="{DynamicResource ActiveGradientText}"></Setter>
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource ActiveGradient}"></Setter>

    <!-- Alert -->
    <Style Selector="^.alert">
      <Setter Property="BorderBrush" Value="{DynamicResource AlertGradient}"></Setter>
      <Setter Property="Foreground" Value="{DynamicResource AlertGradient}"></Setter>
    </Style>
    <!-- Danger -->
    <Style Selector="^.danger">
      <Setter Property="BorderBrush" Value="{DynamicResource DangerGradient}"></Setter>
      <Setter Property="Foreground" Value="{DynamicResource DangerGradient}"></Setter>
    </Style>
    <!-- Success -->
    <Style Selector="^.success">
      <Setter Property="BorderBrush" Value="{DynamicResource SuccessGradient}"></Setter>
      <Setter Property="Foreground" Value="{DynamicResource SuccessGradient}"></Setter>
    </Style>
  </Style>

  <!-- Outline button (hover) -->
  <Style Selector=":is(Button).outline:pointerover /template/ ContentPresenter">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource ActiveHoverGradient}"></Setter>
  </Style>
  <Style Selector=":is(Button).outline:pointerover">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
    <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource ActiveHoverGradient}"></Setter>
  </Style>

  <!-- Outline alert (hover) -->
  <Style Selector=":is(Button).outline.alert:pointerover /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource AlertHoverGradient}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource AlertHoverGradient}"></Setter>
  </Style>
  <Style Selector=":is(Button).outline.alert:pointerover">
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource AlertHoverGradient}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource AlertHoverGradient}"></Setter>
  </Style>

  <!-- Outline danger (hover) -->
  <Style Selector=":is(Button).outline.danger:pointerover /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource DangerHoverGradient}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource DangerHoverGradient}"></Setter>
  </Style>
  <Style Selector=":is(Button).outline.danger:pointerover">
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource DangerHoverGradient}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource DangerHoverGradient}"></Setter>
  </Style>

  <!-- Outline success (hover) -->
  <Style Selector=":is(Button).outline.success:pointerover /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource SuccessHoverGradient}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource SuccessHoverGradient}"></Setter>
  </Style>
  <Style Selector=":is(Button).outline.success:pointerover">
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource SuccessHoverGradient}"></Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource SuccessHoverGradient}"></Setter>
  </Style>

  <!-- Transparent button (hover) -->
  <Style Selector=":is(Button).transparent:pointerover /template/ ContentPresenter">
    <Setter Property="RenderTransform" Value="scale(1.2)"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
    <Setter Property="Background" Value="Transparent"></Setter>
  </Style>
  <Style Selector=":is(Button).transparent:pointerover">
    <Setter Property="RenderTransform" Value="scale(1.2)"></Setter>
    <Setter Property="Background" Value="Transparent"></Setter>
  </Style>

  <!-- Transparent button animation -->
  <Style Selector=":is(Button) /template/ ContentPresenter">
    <Setter Property="Transitions">
      <Transitions>
        <BrushTransition Property="Foreground" Duration="0:0:0.1" />
        <BrushTransition Property="Background" Duration="0:0:0.1" />
        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
      </Transitions>
    </Setter>
  </Style>
  <Style Selector=":is(Button)">
    <Setter Property="Transitions">
      <Transitions>
        <BrushTransition Property="Foreground" Duration="0:0:0.1" />
        <BrushTransition Property="Background" Duration="0:0:0.1" />
        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
      </Transitions>
    </Setter>
  </Style>

  <!-- Transparent button -->
  <Style Selector=":is(Button).transparent">
    <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
    <Setter Property="Background" Value="Transparent"></Setter>
  </Style>

  <!-- Transparent button icon only label -->
  <Style Selector=":is(Button).transparent Label.icon-only">
    <Setter Property="FontFamily" Value="{DynamicResource Phosphor}"></Setter>
  </Style>

  <!-- Active button -->
  <Style Selector=":is(Button).active /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource HoverGradient}"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
  </Style>
  <Style Selector=":is(Button).active">
    <Setter Property="Background" Value="{DynamicResource HoverGradient}"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
  </Style>

</Styles>
